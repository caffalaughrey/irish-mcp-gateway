name: CI

on:
  push:
    branches: [ main, refactor ]
  pull_request:
    branches: [ main, refactor ]

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
      - name: fmt check
        run: cargo fmt --all -- --check
      - name: clippy (deny warnings)
        run: cargo clippy --all-targets --all-features -- -D warnings
      - name: tests
        run: cargo test --all-features --all-targets --no-fail-fast

  lint-udeps:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-udeps
        run: cargo install cargo-udeps --locked
      - name: Run cargo-udeps
        run: cargo udeps --all-targets

  lint-machete:
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - name: Install cargo-machete
        run: cargo install cargo-machete --locked
      - name: Run cargo-machete
        run: cargo machete

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: 1.89.0
          components: clippy, rustfmt, llvm-tools-preview

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --locked --verbose

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy (deny warnings)
        run: cargo clippy --all --all-features -- -D warnings

      - name: Test
        run: cargo test --all --all-features --quiet

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@v2
        with:
          tool: cargo-llvm-cov
        continue-on-error: true

      - name: Coverage (lcov)
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info
        continue-on-error: false

      - name: Coverage (html)
        run: cargo llvm-cov --workspace --html --output-path coverage/html
        continue-on-error: true

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            lcov.info
            coverage/html

      - name: Upload coverage to Codecov (non-blocking)
        if: always() && hashFiles('lcov.info') != ''
        uses: codecov/codecov-action@v4
        with:
          files: lcov.info
          flags: unittests
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false